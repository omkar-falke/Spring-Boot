drop trigger SPLDATA.rctGRN;commit;create trigger SPLDATA.rctGRN after update of GR_RECQT on SPLDATA.MM_GRMST referencing new as new_row old as old_row for each row mode DB2ROW  begin  declare END_TABLE int default 0;   declare continue handler for not found  set END_TABLE = 1; IF(new_row.GR_STSFL = '0') THEN update SPLDATA.MM_STMST  set ST_TRNFL ='0', ST_STKIP =  ifnull(ST_STKIP,0) +  (ifnull(new_row.GR_RECQT,0)  -  ifnull(old_row.GR_RECQT,0))  where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD;END IF;end;drop trigger SPLDATA.insGRN;commit;create trigger SPLDATA.insGRN after insert on SPLDATA.MM_GRMST referencing new as new_row for each row mode DB2ROW  begin   declare END_TABLE int default 0;    declare continue handler for not found  set END_TABLE = 1; IF(new_row.GR_STSFL = '0') THEN update SPLDATA.MM_STMST  set ST_TRNFL ='0', ST_STKIP =  ifnull(ST_STKIP,0) +  ifnull(new_row.GR_RECQT,0) where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD;  END IF;end;COMMIT;drop trigger SPLDATA.delGRN;commit;create trigger SPLDATA.delGRN after update of GR_STSFL on SPLDATA.MM_GRMST referencing new as new_row for each row mode DB2ROW  begin   declare END_TABLE int default 0;    declare continue handler for not found  set END_TABLE = 1; IF(new_row.GR_STSFL = 'X') THEN update SPLDATA.MM_STMST  set ST_TRNFL ='0', ST_STKIP =  ifnull(ST_STKIP,0) -  ifnull(new_row.GR_RECQT,0) where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD;  END IF;end;COMMIT;drop trigger SPLDATA.acpGRN;commit;create trigger SPLDATA.acpGRN after update of GR_ACPQT on SPLDATA.MM_GRMST referencing new as new_row old as old_row for each row mode DB2ROW begin  declare END_TABLE int default 0;  declare continue handler for not found  set END_TABLE = 1; IF (ifnull(new_row.GR_STSFL,'') = '2') THEN update SPLDATA.MM_STMST  set ST_TRNFL ='0',ST_STKIP =  ifnull(ST_STKIP,0) -((ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0))+(ifnull(new_row.GR_REJQT,0)  -  ifnull(old_row.GR_REJQT,0))), ST_STKOR =  ifnull(ST_STKOR,0) -  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0)),  ST_STKQT =  ifnull(ST_STKQT,0) +  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0)),  ST_YTDGR =  ifnull(ST_YTDGR,0) +  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0)) where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD AND ifnull(new_row.GR_AMDNO,'') = '00'; update SPLDATA.MM_STMST  set ST_PGRNO =  new_row.GR_GRNNO,ST_PGRDT = NEW_ROW.GR_ACPDT  where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD AND ifnull(new_row.GR_AMDNO,'') = '00' AND IFNULL(NEW_ROW.GR_ACPQT,0) >0;  update SPLDATA.MM_STMST  set ST_PISDT = NEW_ROW.GR_ACPDT  where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD AND ifnull(new_row.GR_AMDNO,'') = '00' AND IFNULL(NEW_ROW.GR_ACPQT,0) >0 and ST_PISDT IS NULL;  /* aDDED ON 17/08/2005 to update previous issue date with GRIN acceptance date , if pisdt is null */ update SPLDATA.MM_STMST set ST_PISDT = NEW_ROW.GR_ACPDT where ST_STRTP = new_row.GR_STRTP  and ST_MATCD = new_row.GR_MATCD AND ifnull(new_row.GR_AMDNO,'') = '00' AND IFNULL(NEW_ROW.GR_ACPQT,0) >0 and ST_PISDT IS NULL;   UPDATE SPLDATA.CO_CTMST SET CT_TRNFL ='0',CT_PGRNO = NEW_ROW.GR_GRNNO,CT_PGRDT = NEW_ROW.GR_ACPDT where  CT_MATCD = new_row.GR_MATCD AND IFNULL(NEW_ROW.GR_ACPQT,0) >0; update SPLDATA.MM_STMST  set ST_TRNFL ='0', ST_STKQT =  ifnull(ST_STKQT,0) +  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0)),  ST_STKOR =  ifnull(ST_STKOR,0) -  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0)),  ST_YTDGR =  ifnull(ST_YTDGR,0) +  (ifnull(new_row.GR_ACPQT,0)  -  ifnull(old_row.GR_ACPQT,0))   where ST_STRTP = new_row.GR_STRTP and ST_MATCD = new_row.GR_MATCD AND ifnull(new_row.GR_AMDNO,'') <> '00';/* ADDED ON 01/03/2005 to adjust the cum. receipt value in case of GRIN AMENDMENT*/UPDATE SPLDATA.MM_STPRC SET STP_CRCVL =  IFNULL(STP_CRCVL,0)-(SELECT GR_PORVL FROM SPLDATA.MM_GRMST WHERE GR_STRTP = STP_STRTP AND GR_GRNNO =NEW_ROW.GR_GRNNO AND GR_MATCD = STP_MATCD) where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD and ifnull(new_row.gr_AMDNO,'00') <>'00';UPDATE SPLDATA.MM_STPRC SET STP_YCSVL =  IFNULL(STP_YCSVL,0)-(SELECT GR_PORVL FROM SPLDATA.MM_GRMST WHERE GR_STRTP = STP_STRTP AND GR_GRNNO =NEW_ROW.GR_GRNNO AND GR_MATCD = STP_MATCD) where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD and ifnull(new_row.GR_AMDNO,'00') <>'00';UPDATE SPLDATA.MM_GRMST SET (GR_PORVL,GR_EXCVL) = (SELECT  FLOAT(SUM(IFNULL(PO_ITVAL,0))) / FLOAT(SUM(IFNULL(PO_PORQT,0)/FLOAT(po_ucnvl))),FLOAT(SUM(IFNULL(PO_EXVAL,0))) / FLOAT(SUM(IFNULL(PO_PORQT,0)/FLOAT(po_ucnvl)))FROM SPLDATA.MM_POMST WHERE PO_STRTP = NEW_ROW.GR_STRTP AND PO_PORNO = NEW_ROW.GR_PORNO AND PO_MATCD = NEW_ROW.GR_matcd AND IFNULL(PO_PORQT,0) >0 AND IFNULL(PO_STSFL,'') <>'X' GROUP BY PO_STRTP,PO_PORNO, PO_MATCD) WHERE GR_STRTP =NEW_ROW.GR_STRTP AND GR_GRNNO =NEW_ROW.GR_GRNNO AND GR_MATCD =NEW_ROW.GR_MATCD;UPDATE SPLDATA.MM_GRMST SET GR_PORVL = IFNULL(GR_PORVL,0)*IFNULL(NEW_ROW.GR_ACPQT,0),GR_EXCVL =IFNULL(GR_EXCVL,0)*IFNULL(NEW_ROW.GR_ACPQT,0)WHERE GR_STRTP = NEW_ROW.GR_STRTP AND GR_GRNNO = NEW_ROW.GR_GRNNO AND GR_MATCD = NEW_ROW.GR_MATCD AND IFNULL(GR_STSFL,'') <>'X'; UPDATE SPLDATA.MM_GRMST SET GR_GRNRT = IFNULL(GR_PORVL,0)/IFNULL(GR_ACPQT,0) WHERE GR_STRTP = NEW_ROW.GR_STRTP AND GR_GRNNO = NEW_ROW.GR_GRNNO AND GR_MATCD = NEW_ROW.GR_MATCD AND IFNULL(GR_STSFL,'') <>'X' AND IFNULL(GR_ACPQT,0) >0; UPDATE SPLDATA.MM_STPRC SET STP_CRCQT = ifnull(STP_CRCQT,0) +(ifnull(NEW_ROW.GR_ACPQT,0)- ifnull(OLD_ROW.GR_ACPQT,0))where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;UPDATE SPLDATA.MM_STPRC SET STP_CRCVL =  IFNULL(STP_CRCVL,0)+(SELECT GR_PORVL FROM SPLDATA.MM_GRMST WHERE GR_STRTP = STP_STRTP AND GR_GRNNO =NEW_ROW.GR_GRNNO AND GR_MATCD = STP_MATCD) where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;UPDATE SPLDATA.MM_STPRC SET STP_YCSQT = ifnull(STP_YCSQT,0) +(ifnull(NEW_ROW.GR_ACPQT,0)- ifnull(OLD_ROW.GR_ACPQT,0))where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;UPDATE SPLDATA.MM_STPRC SET STP_YCSVL =  IFNULL(STP_YCSVL,0)+(SELECT GR_PORVL FROM SPLDATA.MM_GRMST WHERE GR_STRTP = STP_STRTP AND GR_GRNNO =NEW_ROW.GR_GRNNO AND GR_MATCD = STP_MATCD) where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;UPDATE SPLDATA.MM_STPRC SET STP_YCLRT = IFNULL(STP_YCSVL,0)/IFNULL(STP_YCSQT,0)where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD AND IFNULL(STP_YCSQT,0) > 0;UPDATE SPLDATA.MM_STPRC SET STP_WAVRT = IFNULL(STP_CRCVL,0)/IFNULL(STP_CRCQT,0)where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD AND IFNULL(STP_CRCQT,0) >0;IF (IFNULL(NEW_ROW.GR_MODFL,'N') ='Y') THENUPDATE SPLDATA.MM_STPRC SET STP_CMDQT = ifnull(STP_CMDQT,0) +(ifnull(NEW_ROW.GR_ACPQT,0)- ifnull(OLD_ROW.GR_ACPQT,0)),STP_YCMQT = ifnull(STP_YCMQT,0) +(ifnull(NEW_ROW.GR_ACPQT,0)- ifnull(OLD_ROW.GR_ACPQT,0)) where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;END IF;END IF;end;commit;drop trigger SPLDATA.updMDV;commit;create trigger SPLDATA.updMDV after update of GR_MODFL on SPLDATA.MM_GRMST referencing new as new_row old as old_row for each row mode DB2ROW  begin   declare END_TABLE int default 0;  declare continue handler for not found  set END_TABLE = 1; IF (IFNULL(OLD_row.GR_MODFL,'N') = 'N') and (IFNULL(new_row.GR_MODFL,'N') = 'Y') THEN	UPDATE SPLDATA.MM_STPRC SET STP_CMDQT = ifnull(STP_CMDQT,0) +ifnull(NEW_ROW.GR_ACPQT,0),STP_CMDVL = STP_CMDVL+ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0),	STP_YCMQT = ifnull(STP_YCMQT,0) +ifnull(NEW_ROW.GR_ACPQT,0),STP_YCMVL = STP_YCMVL+ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)  	,STP_CRCVL = ifnull(STP_CRCVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;		UPDATE SPLDATA.MM_STPRC SET STP_YCSVL = ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)) > 0 	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;		UPDATE SPLDATA.MM_STPRC SET STP_CISVL = ifnull(STP_CISVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)) < 0	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;	else IF (IFNULL(OLD_row.GR_MODFL,'N') = 'Y') and (IFNULL(new_row.GR_MODFL,'N') = 'N') THEN	UPDATE SPLDATA.MM_STPRC SET STP_CMDQT = ifnull(STP_CMDQT,0) -ifnull(NEW_ROW.GR_ACPQT,0),STP_CMDVL = STP_CMDVL - ifnull(old_ROW.GR_MODVL,0),	STP_YCMQT = ifnull(STP_YCMQT,0) -ifnull(NEW_ROW.GR_ACPQT,0),STP_YCMVL = STP_YCMVL - ifnull(old_ROW.GR_MODVL,0)  	,STP_CRCVL = ifnull(STP_CRCVL,0) + ifnull(OLD_ROW.GR_MODVL,0)	where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;		UPDATE SPLDATA.MM_STPRC SET STP_YCSVL = ifnull(STP_YCSVL,0) + ifnull(OLD_ROW.GR_MODVL,0)	where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD and ifnull(STP_YCSVL,0)>0;		UPDATE SPLDATA.MM_STPRC SET STP_CISVL = ifnull(STP_CISVL,0) + ifnull(OLD_ROW.GR_MODVL,0)	where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD and ifnull(STP_YCSVL,0)=0;	else  IF (IFNULL(OLD_row.GR_MODFL,'N') = 'Y')and (IFNULL(new_row.GR_MODFL,'N') = 'Y') THEN	UPDATE SPLDATA.MM_STPRC SET STP_CMDVL = IFNULL(STP_CMDVL,0)+ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0),	STP_YCMVL = IFNULL(STP_YCMVL,0)+ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)  	,STP_CRCVL = ifnull(STP_CRCVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;	UPDATE SPLDATA.MM_STPRC SET STP_YCSVL = ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)) > 0	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;		UPDATE SPLDATA.MM_STPRC SET STP_CISVL = ifnull(STP_CISVL,0) + (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0))	where ifnull(STP_YCSVL,0) - (ifnull(NEW_ROW.GR_MODVL,0)-ifnull(OLD_ROW.GR_MODVL,0)) < 0	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;	 END IF;END IF;END IF; 	update SPLDATA.MM_STPRC set STP_YCLRT = ifnull(STP_YCSVL,0) / ifnull(STP_YCSQT,0)	where ifnull(STP_YCSQT,0) >0	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;		update SPLDATA.MM_STPRC set STP_WAVRT = ifnull(STP_CRCVL,0) / ifnull(STP_CRCQT,0)	where ifnull(STP_CRCQT,0) >0	and STP_STRTP = new_row.GR_STRTP and STP_MATCD = new_row.GR_MATCD ;	end;COMMIT;/*DIVIDE BY ZERO : SQLCODE -802 SQLSTATE 22012*//*RESULT OF SELECT MORE THAN ONE ROW  : SQLCODE -811 SQLSTATE */