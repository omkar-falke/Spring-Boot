
drop trigger SPLDATA.MM_POTRG;
commit;
;
CREATE TRIGGER SPLDATA.MM_POTRG 
	AFTER UPDATE OF PO_STSFL ON SPLDATA.MM_POMST 
	REFERENCING OLD AS OLD_ROW 
	NEW AS NEW_ROW 
	FOR EACH ROW 
	MODE DB2ROW 
	BEGIN 
	DECLARE L_CNT DECIMAL ( 1 , 0 ) DEFAULT 0 ; 
	DECLARE END_TABLE INT DEFAULT 0 ; 
	  
	DECLARE C1 CURSOR FOR SELECT QSYS2 . COUNT ( * ) L_COUNT FROM SPLDATA . CO_CTPTR 
	WHERE SPLDATA . CO_CTPTR . CTP_MATCD = NEW_ROW . PO_MATCD AND SPLDATA . CO_CTPTR . CTP_PRTTP = 'S' AND SPLDATA . CO_CTPTR . CTP_PRTCD = NEW_ROW . PO_VENCD ; 
	  
	DECLARE CONTINUE HANDLER FOR NOT FOUND 
	SET "SQLP_L3" . END_TABLE = 1 ; 
	  
	  
	IF ( QSYS2 . IFNULL ( NEW_ROW . PO_STSFL , '' ) = 'A' ) THEN 
	IF ( NEW_ROW . PO_PORTP <> '03' ) THEN 
		IF ( NEW_ROW . PO_AMDNO = '00' ) THEN 
		 
			UPDATE SPLDATA . MM_STMST SET ST_TRNFL = '0' , ST_STKOR = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKOR , 0 ) + QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 ) , ST_STKIN = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKIN , 0 ) - QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 ) ,		ST_PPONO = NEW_ROW . PO_PORNO , ST_PPOVL = NEW_ROW . PO_PORRT		WHERE  ST_CMPCD = NEW_ROW . PO_CMPCD AND ST_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_STMST . ST_MATCD = NEW_ROW . PO_MATCD AND QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) <> 'A' ; 
			UPDATE SPLDATA . CO_CTMST SET CT_TRNFL = '0' , CT_PPONO = NEW_ROW . PO_PORNO , CT_PPODT = NEW_ROW . PO_PORDT , CT_PPORT = NEW_ROW . PO_PORRT		WHERE SPLDATA . CO_CTMST . CT_MATCD = NEW_ROW . PO_MATCD ; 
			 
		ELSE 
			UPDATE SPLDATA . MM_STMST SET ST_TRNFL = '0' , ST_STKOR = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKOR , 0 ) + QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 ) , ST_STKIN = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKIN , 0 ) - QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 )		WHERE ST_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_STMST . ST_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_STMST . ST_MATCD = NEW_ROW . PO_MATCD AND QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) <> 'X' AND NEW_ROW . PO_AMDNO <> '00' ; 
		END IF ; 
	END IF ; 
	UPDATE SPLDATA . MM_INMST SET IN_TRNFL = '0' , IN_ORDQT = QSYS2 . IFNULL ( SPLDATA . MM_INMST . IN_ORDQT , 0 ) + QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 )WHERE IN_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_INMST . IN_MMSBS = NEW_ROW . PO_MMSBS AND SPLDATA . MM_INMST . IN_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_INMST . IN_INDNO = NEW_ROW . PO_INDNO AND SPLDATA . MM_INMST . IN_MATCD = NEW_ROW . PO_MATCD ; 
	IF ( NEW_ROW . PO_PORTP <> '03' ) THEN 
		OPEN C1 ; 
		WHILE END_TABLE = 0 DO 
	  
		FETCH C1 INTO "SQLP_L3" . L_CNT ; 
		IF "SQLP_L3" . L_CNT = 0 THEN 
			INSERT INTO SPLDATA . CO_CTPTR ( CTP_MATCD , CTP_PRTTP , CTP_PRTCD , CTP_LPONO , CTP_LPODT , CTP_LPOQT , CTP_LPORT , CTP_LPOVL , CTP_QTNNO , CTP_QTNDT , CTP_TRNFL , CTP_LUSBY , CTP_LUPDT ) 
			VALUES ( NEW_ROW . PO_MATCD , 'S' , NEW_ROW . PO_VENCD , NEW_ROW . PO_PORNO , NEW_ROW . PO_PORDT , NEW_ROW . PO_PORQT , NEW_ROW . PO_PORRT , NEW_ROW . PO_ITVAL , NEW_ROW . PO_QTNNO , NEW_ROW . PO_QTNDT , '0' , NEW_ROW . PO_LUSBY , NEW_ROW . PO_LUPDT ) ;	 
		ELSE 
			UPDATE SPLDATA . CO_CTPTR SET CTP_TRNFL = '0' , CTP_LPONO = NEW_ROW . PO_PORNO , CTP_LPOQT = QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 ) ,		CTP_LPORT = QSYS2 . IFNULL ( NEW_ROW . PO_PORRT , 0 ) , CTP_LPOVL = QSYS2 . IFNULL ( NEW_ROW . PO_ITVAL , 0 ) , CTP_LPODT = NEW_ROW . PO_PORDT , CTP_QTNNO = NEW_ROW . PO_QTNNO , CTP_QTNDT = NEW_ROW . PO_QTNDT ,		CTP_LUSBY = NEW_ROW . PO_LUSBY , CTP_LUPDT = NEW_ROW . PO_LUPDT		WHERE SPLDATA . CO_CTPTR . CTP_MATCD = NEW_ROW . PO_MATCD AND SPLDATA . CO_CTPTR . CTP_PRTTP = 'S' AND SPLDATA . CO_CTPTR . CTP_PRTCD = NEW_ROW . PO_VENCD ; 
		END IF ; 
		FETCH C1 INTO "SQLP_L3" . L_CNT ; 
		END WHILE ; 
		CLOSE C1 ; 
	END IF ; 
		 
	ELSE IF ( ( QSYS2 . IFNULL ( NEW_ROW . PO_STSFL , '' ) = 'X' ) AND ( QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) = 'A' ) ) THEN 
	IF ( NEW_ROW . PO_PORTP <> '03' ) THEN 
		UPDATE SPLDATA . MM_STMST SET ST_TRNFL = '0' , ST_STKOR = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKOR , 0 ) - QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 ) , ST_STKIN = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKIN , 0 ) + QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 )	WHERE ST_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_STMST . ST_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_STMST . ST_MATCD = NEW_ROW . PO_MATCD AND QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) = 'A' ;END IF ; 
	  
	UPDATE SPLDATA . MM_INMST SET IN_TRNFL = '0' , IN_ORDQT = QSYS2 . IFNULL ( SPLDATA . MM_INMST . IN_ORDQT , 0 ) - QSYS2 . IFNULL ( NEW_ROW . PO_PORQT , 0 )WHERE IN_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_INMST . IN_MMSBS = NEW_ROW . PO_MMSBS AND SPLDATA . MM_INMST . IN_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_INMST . IN_INDNO = NEW_ROW . PO_INDNO AND SPLDATA . MM_INMST . IN_MATCD = NEW_ROW . PO_MATCD ; 
	  
	ELSE IF ( ( QSYS2 . IFNULL ( NEW_ROW . PO_STSFL , '' ) = 'O' ) AND ( QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) <> 'O' ) AND ( NEW_ROW . PO_AMDNO <> '00' ) ) THEN 
	IF ( NEW_ROW . PO_PORTP <> '03' ) THEN 
		UPDATE SPLDATA . MM_STMST SET ST_TRNFL = '0' , ST_STKOR = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKOR , 0 ) - QSYS2 . IFNULL ( OLD_ROW . PO_PORQT , 0 ) , ST_STKIN = QSYS2 . IFNULL ( SPLDATA . MM_STMST . ST_STKIN , 0 ) + QSYS2 . IFNULL ( OLD_ROW . PO_PORQT , 0 )	WHERE ST_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_STMST . ST_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_STMST . ST_MATCD = NEW_ROW . PO_MATCD AND QSYS2 . IFNULL ( OLD_ROW . PO_STSFL , '' ) <> 'X' ;END IF ; 
	  
	UPDATE SPLDATA . MM_INMST SET IN_TRNFL = '0' , IN_ORDQT = QSYS2 . IFNULL ( SPLDATA . MM_INMST . IN_ORDQT , 0 ) - QSYS2 . IFNULL ( OLD_ROW . PO_PORQT , 0 )WHERE IN_CMPCD = NEW_ROW . PO_CMPCD AND SPLDATA . MM_INMST . IN_MMSBS = NEW_ROW . PO_MMSBS AND SPLDATA . MM_INMST . IN_STRTP = NEW_ROW . PO_STRTP AND SPLDATA . MM_INMST . IN_INDNO = NEW_ROW . PO_INDNO AND SPLDATA . MM_INMST . IN_MATCD = NEW_ROW . PO_MATCD ; 
	END IF ; 
	END IF ; 
	END IF ; 
	END  ;
commit;

