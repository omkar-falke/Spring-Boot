drop procedure SPLDATA.mm_mdprc;
commit;

create procedure SPLDATA.mm_mdprc(IN LP_CMPCD char(2),IN LP_STRTP CHAR(2),IN LP_GRNNO char(8)) language sql modifies sql data
P2:
begin
declare L_ISMQT decimal(12,3);
declare L_ISSQT decimal(12,3);
declare L_ACPQT  decimal(12,3);
declare L_GRAQT  decimal(12,3);
declare L_ISMVL decimal(12,2);
declare L_MDVRT decimal(12,2);
DECLARE L_ISSNO CHAR(8);
DECLARE L_MATCD CHAR(10);
DECLARE L_PMATCD CHAR(10);
DECLARE L_TAGNO CHAR(15);
DECLARE L_ACPDT DATE;

declare END_TABLE int default 0; 

declare C_ISS CURSOR FOR SELECT IS_ISSNO,IS_MATCD,IS_TAGNO,isnull(GR_ACPQT,0),
(isnull(IS_ISSQT,0)-isnull(IS_MDVQT,0)) L_ISBQT,isnull(GR_MODVL,0)/isnull(GR_ACPQT,0)L_MDVRT,GR_ACPDT FROM SPLDATA.MM_ISMST,
SPLDATA.MM_GRMST WHERE is_cmpcd = lp_cmpcd and IS_STRTP = GR_STRTP AND IS_MATCD = GR_MATCD AND 
isnull(GR_STSFL,'') <>'X' AND isnull(IS_STSFL,'') ='2' AND GR_STRTP = LP_STRTP
 AND GR_GRNNO = LP_GRNNO and isnull(GR_MODFL,'') ='Y' AND IS_ISSDT >= GR_ACPDT 
 AND isnull(IS_ISSQT,0)-isnull(IS_MDVQT,0) > 0 ORDER BY IS_MATCD,IS_ISSDT; 

declare continue handler for not found 
set END_TABLE  =1;

SET L_ISMQT =0;
SET L_ISMVL =0;
SET L_ISSQT =0;
SET L_MDVRT =0;
SET L_ACPQT =0;

open C_ISS;

fetch C_ISS INTO L_ISSNO,L_MATCD,L_TAGNO,L_GRAQT,L_ISSQT,L_MDVRT,L_ACPDT ; 

SET L_PMATCD = L_MATCD;
SET L_ACPQT = L_GRAQT;
	  
while END_TABLE =0 DO
    
IF (L_PMATCD <> L_MATCD ) THEN

   update SPLDATA.MM_STPRC SET STP_CMIQT = isnull(STP_CMIQT,0)+L_ISMQT,STP_CMIVL = isnull(STP_CMIQT,0) +L_ISMVL,
   STP_YCMQT = isnull(STP_YCMQT,0) - L_ISMQT,STP_YCMVL = isnull(STP_YCMVL,0) - L_ISMVL
   where stp_cmpcd = lp_cmpcd and STP_STRTP = LP_STRTP and STP_MATCD = L_PMATCD;
   /*INSERT INTO SPLDATA.MM_TRIG(L_MATCD,L_ISMQT,L_ISMVL,REMARK)VALUES(L_PMATCD,L_ISMQT,L_ISMVL,'STPRC UPDATE FROM LOOP');*/
   SET L_PMATCD= L_MATCD;
   SET L_ISMQT = 0;
   SET L_ISMVL = 0;
   SET L_ACPQT = L_GRAQT;
   
END IF;  
 
 IF (L_ACPQT >0) THEN
 IF (L_ISSQT >=L_ACPQT) THEN
	update SPLDATA.MM_ISMST set IS_TRNFL ='0',IS_MDVQT = IS_MDVQT +L_ACPQT,
	IS_MDVVL = IS_MDVVL +L_MDVRT * L_ACPQT where is_cmpcd = lp_cmpcd and IS_STRTP = LP_STRTP and IS_ISSNO = L_ISSNO
	AND IS_TAGNO = L_TAGNO AND IS_MATCD = L_MATCD ;
	/*INSERT INTO SPLDATA.MM_TRIG(IS_ISSNO,GR_ACPQT,L_MATCD,L_ISMQT,L_ISMVL,REMARK)VALUES(L_ISSNO,L_ACPQT,L_MATCD,L_ISMQT,L_ISMVL,'ISSUE UPDATE FROM ISSQT >ACPQT');*/
	SET L_ISMQT = L_ISMQT +L_ACPQT;
	SET L_ISMVL = L_ISMVL +L_MDVRT * L_ACPQT;
	SET L_ACPQT =0;
	
 ELSE
	update SPLDATA.MM_ISMST set IS_TRNFL ='0',IS_MDVQT = isnull(IS_MDVQT,0) +L_ISSQT,
	IS_MDVVL = isnull(IS_MDVVL,0) +L_MDVRT*L_ISSQT where is_cmpcd = lp_cmpcd and IS_STRTP = LP_STRTP and IS_ISSNO = L_ISSNO
	AND IS_TAGNO = L_TAGNO AND IS_MATCD = L_MATCD ;
/*	INSERT INTO SPLDATA.MM_TRIG(IS_ISSNO,L_MATCD,L_ISMQT,L_ISMVL,REMARK)VALUES(L_ISSNO,L_MATCD,L_ISMQT,L_ISMVL,'ISSUE UPDATE FROM ISSQT <ACPQT');	*/
	SET L_ISMQT = L_ISMQT +L_ISSQT;
	SET L_ISMVL = L_ISMVL +L_MDVRT * L_ISSQT;
	SET L_ACPQT = L_ACPQT - L_ISSQT;
	
 END IF;
 END IF;  
fetch C_ISS INTO L_ISSNO,L_MATCD,L_TAGNO,L_GRAQT,L_ISSQT,L_MDVRT,L_ACPDT ;
 
END WHILE; 
update SPLDATA.MM_STPRC SET STP_CMIQT = isnull(STP_CMIQT,0)+L_ISMQT,STP_CMIVL = isnull(STP_CMIQT,0) +L_ISMVL,
   STP_YCMQT = isnull(STP_YCMQT,0) - L_ISMQT,STP_YCMVL = isnull(STP_YCMVL,0) - L_ISMVL
   where stp_cmpcd = lp_cmpcd and STP_STRTP = LP_STRTP and STP_MATCD = L_MATCD;
/*INSERT INTO SPLDATA.MM_TRIG(L_MATCD,L_ISMQT,L_ISMVL,REMARK)VALUES(L_PMATCD,L_ISMQT,L_ISMVL,'STPRC UPDATE OUT OF LOOP');*/
CLOSE C_ISS; 
COMMIT; 
END P2; 

commit;
