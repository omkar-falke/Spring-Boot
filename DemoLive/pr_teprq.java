/**
System Name: Production System.
 
Program Name: Production Request

Source Directory: f:\source\splerp3\pr_teprq.java                         

Executable Directory: F:\exec\splerp3\pr_teprq.class

Purpose: Production Request.

List of tables used:
Table Name		Primary key											Operation done
															Insert	Update	   Query    Delete	
-----------------------------------------------------------------------------------------------------------------------------------------------------
PR_RQTRN		RQ_DOCNO, RQ_DOCDT, RQ_CMPCD                   /	  /           /         /
FG_STMST		ST_CMPCD, ST_WRHTP, ST_PRDTP, ST_MNLCD							             ST_LOTNO, ST_RCLNO, ST_PKGTP,     
PR_RMMST        RM_CMPCD,RM_TRNTP,RM_PRDTP,RM_DOCTP,RM_DOCNO.  /       /           /        /                              /                 
-----------------------------------------------------------------------------------------------------------------------------------------------------



List of fields accepted/displayed on screen:
Field Name		Column Name		Table name		Type/Size	Description
-----------------------------------------------------------------------------------------------------------------------------------------------------
txtDOCNO		RQ_DOCNO		PR_RQTRN		Varchar(8)		PR No	
txtDOCDT		RQ_DOCDT		PR_RQTRN		Date  			PR Date
txtDWRNO		RQ_DWRNO		PR_RQTRN		Varchar(15)  	developing work order No
txtREQBY 		RQ_REQBY		PR_RQTRN		Varchar(10) 	PR from
txtPTRNM		RQ_PTRNM		PR_RQTRN		varchar(40)  	Customer name
txtREQRG		RQ_REQRG		PR_RQTRN		Varchar(5)  	Region
txtINDRF		RQ_INDRF		PR_RQTRN		Varchar(8)  	Indent Reference
txtPRDCD		RQ_PRDCD		PR_RQTRN		Varchar(10)  	Product Code
txtPKGTP		RQ_PKGTP		PR_RQTRN		Varchar(2)		Package Type
txtREQQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	Required quantity	
txtSTKQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	Stock quantity
txtOLHQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	Quantity on hold
txtUCLQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	Unclassified quantity	
txtRESQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	sales return quantity	
txtTARQT		RQ_REQQT		PR_RQTRN		Decimal(12,3)	Target quantity
txtREQDT		RQ_REQDT		PR_RQTRN		Date			Requested Date
txtREMDS 		RQ_REMDS		PR_RMMST		Varchar(200) 	Remark for Request
txtPRCDT		RQ_PRCDT		PR_RQTRN		Date			Product completion Date
txtAUTBY		RQ_AUTBY		PR_RQTRN		Varchar(3)		Authorized by
txtAUTDT		RQ_AUTDT		PR_RQTRN		Date			Authorized Date
txtREMAU 		RQ_RMKDS		PR_RMMST		Varchar(200)	Remark for Production	

-----------------------------------------------------------------------------------------------------------------------------------------------------


List of fields with help facility: 
Field Name	Display Description		    Display Columns			Table Name
-----------------------------------------------------------------------------------------------------------------------------------------------------
TxtDOCNO	PR No, PR Date, Status      RQ_DOCNO, RQ_DOCDT, RQ_STSFL		PR_RQTRN
txtPRTCD	party code, party name      PT_PRTCD, PT_PRTNM, PT_ZONCD		CO_PTMST
TxtPRDCD	grade code, description		PR_PRDCD, PR_PRDDS, PR_PRDTP		CO_PRMST
TxtPKGTP	code, Description	        cmt_codcd, cmt_codds				CO_CDTRN/SYS/FGXXPKG
-----------------------------------------------------------------------------------------------------------------------------------------------------


Validations & Other Information:
  	- Production Date should not be greater than current date.
  	- Authorized date should be current date and,
  	- Authorized By name should be user name, this are generated by press enter in text box of production by date.
    - Before saving Request transactions,it should be validated.
    - Freeze record should not be display in F1 screen, after freezed record for execution.
    
    
Requirements:
	- When click on save button to save data,then display PR NO in JOptionpane. 
	- Status flag '0'to Save data initially.
	- Status flag '1'to Authorized.
	- Status flag '2'to Freeze data. 
	- After selecting specified Customer from co_ptmst, it will be display description & zone in text box.
	- After selecting specified Grade from co_prmst,then display Quantity(stock qty, qty on hold, sales return qty, inclassified qty & target qty) of product in tblQTDTL table.
	- While saving the entries,it will be saved in pr_rqtrn table.
	- insert & update Remark of Request detail & Production detail in pr_rmmst table.
	- Input verifier for PR date & PR No.
	- While entering all Request transactions data,click on save button to save data in respective database table.
	- For modification user can select PR NO from help screen. 
	- For authorization, enter data in textbox of production detail. 
	- if authorized record by production, enable freeze chk box otherwise disable.
	- user can freeze data by select freeze chkbox after the completion of authorization,
	- User can delete & modify selected data .
	- PR number & Product type are protected from modification. 
	- User can click on print button to print the report.  

**/
import java.awt.event.*;
import java.awt.BorderLayout;
import javax.swing.*;
import javax.swing.JTable;
import java.sql.ResultSet;
import java.util.StringTokenizer;
import javax.swing.border.*;
import java.awt.Color;
import java.util.Hashtable;

/*
 */

class pr_teprq extends cl_pbase 
{
	private JTextField txtDOCNO;			
	private JTextField txtDOCDT;
	private JTextField txtDWRNO;
	private JTextField txtREQBY;
	private JTextField txtPRTCD;
	private JTextField txtZONDS;
	private JTextField txtINDRF;			
	private JTextField txtREQQT;
	private JTextField txtREQDT;
	private JTextField txtPRDCD;
	private JTextField txtPRDTP;
	private JTextField txtPKGTP;
	private JTextField txtDSPON;
	private JTextField txtREMRQ;
	private JTextField txtPRTNM;
	private JTextField txtPRDDS;
	
	private JTextField txtREMAU;
	private JTextField txtPRCDT;
	private JTextField txtAUTDT;			
	private JTextField txtAUTBY;
	
	private JCheckBox chkFREZE;
	private JCheckBox chkFSBFL;
	private JRadioButton  rdbFSBYS;
	private JRadioButton rdbFSBNO;
	private ButtonGroup  btgFSB;
	private JButton btnPRINT;
	
	private JPanel M_pnlFSBFL,M_pnlREQDL,M_pnlPRDDL;
	
	private  cl_JTable tblQTDTL;
	
	private String M_strSQLQRY1="";
	private String strDOCNO="";
	private String strPRNO="";
	private String P_strDOCNO="";
	private String L_strZONDS="";
	
	Hashtable<String,String> hstZONCD;
	
	int TB1_CHKFL = 0; 				
	int TB1_PRDCD = 1;             
	int TB1_STKQT = 2; 				
	int TB1_PORQT = 3;
	int TB1_QLHQT = 4;              
	int TB1_RESQT = 5; 				
    int TB1_UCLQT = 6;              
    int TB1_TARQT = 7;				
	    
	private INPVF oINPVF;
	
	private JLabel lblREQDL,lblPRDDS,lblPRDDL,lblPRTNM,lblPKGDS,lblFSBFL;
	
	
	pr_teprq()		/*  Constructor   */
	{
		super(1);
		try
		{
			setMatrix(20,20);	
			
			M_pnlREQDL= new JPanel(null);
			//add(lblREQDL=new JLabel("Request Detail"),1,2,1,1,M_pnlREQDL,'L');
			//lblREQDL.setForeground(Color.blue);
			add(new JLabel("PR No"),1,2,1,1,M_pnlREQDL,'L');
			add(txtDOCNO = new TxtLimit(8),1,4,1,2,M_pnlREQDL,'L');
						
			add(new JLabel("PR Date"),1,6,1,2,M_pnlREQDL,'L');
			add(txtDOCDT = new TxtDate(),1,8,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("DWR No"),1,10,1,2,M_pnlREQDL,'L');
			add(txtDWRNO = new TxtLimit(15),1,12,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("PR Initiator"),2,2,1,2,M_pnlREQDL,'L');
			add(txtREQBY= new TxtLimit(10),2,4,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("Customer"),2,6,1,2,M_pnlREQDL,'L');
			add(txtPRTCD = new TxtLimit(5),2,8,1,2,M_pnlREQDL,'L');
			add(txtPRTNM = new TxtLimit(5),2,10,1,4,M_pnlREQDL,'L');
			//add(lblPRTNM= new JLabel(),3,6,1,2,this,'L');
			
			add(new JLabel("Zone"),2,14,1,1,M_pnlREQDL,'L');
			add(txtZONDS= new TxtLimit(10),2,15,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("Indent Reference"),3,2,1,2.2,M_pnlREQDL,'L');
			add(txtINDRF= new TxtLimit(8),3,4,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("Grade"),3,6,1,2,M_pnlREQDL,'L');
			add(txtPRDCD= new TxtLimit(10),3,8,1,2,M_pnlREQDL,'L');
			//add(lblPRDDS= new JLabel(),3,10,1,2,M_pnlREQDL,'L');
			add(txtPRDDS= new TxtLimit(10),3,10,1,2,M_pnlREQDL,'L');
			add(txtPRDTP= new TxtLimit(2),3,12,1,0.5,M_pnlREQDL,'L');
			
			add(new JLabel("Package Type"),3,13,1,2,M_pnlREQDL,'L');
			add(txtPKGTP= new TxtLimit(2),3,15,1,2,M_pnlREQDL,'L');
			add(lblPKGDS= new JLabel(),3,17,1,3,M_pnlREQDL,'L');
			
			add(new JLabel("Quantity"),4,2,1,2,M_pnlREQDL,'L');
			add(txtREQQT = new TxtNumLimit(12.3),4,4,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("Despatch Date"),4,6,1,2,M_pnlREQDL,'L');
			add(txtREQDT = new TxtDate(),4,8,1,2,M_pnlREQDL,'L');
			
			add(new JLabel("Remark"),5,2,1,2,M_pnlREQDL,'L');
			add(txtREMRQ = new TxtLimit(200),5,4,1,9,M_pnlREQDL,'L');
			
			add(chkFREZE=new JCheckBox("Freeze"),5,14,1,2,M_pnlREQDL,'L'); 
			
			M_pnlREQDL.setBorder(BorderFactory.createTitledBorder("Request Detail"));
			add(M_pnlREQDL,1,2,6,19,this,'L');
			
			M_pnlPRDDL=new JPanel(null);
			
			add(lblFSBFL=new JLabel("Feasibility"),1,2,1,2,M_pnlPRDDL,'L');
			add(rdbFSBYS=new JRadioButton("Yes"),1,4,1,1.8,M_pnlPRDDL,'L');
			add(rdbFSBNO=new JRadioButton("NO"),1,6,1,1.8,M_pnlPRDDL,'L');
			btgFSB=new ButtonGroup();
			btgFSB.add(rdbFSBYS); 
			btgFSB.add(rdbFSBNO);  
			rdbFSBYS.setSelected(true);
			
			add(new JLabel("Production by date"),1,8,1,2.5,M_pnlPRDDL,'L');
			add(txtPRCDT = new TxtDate(),1,11,1,2,M_pnlPRDDL,'L');
			
			add(new JLabel("Authorized by date"),1,13,1,2.5,M_pnlPRDDL,'L');
			add(txtAUTDT = new TxtLimit(25),1,16,1,2,M_pnlPRDDL,'L');
			
			add(new JLabel("Authorized by "),2,13,1,2,M_pnlPRDDL,'L');
			add(txtAUTBY = new TxtLimit(25),2,16,1,2,M_pnlPRDDL,'L');
			
			add(new JLabel("Remark"),2,2,1,2,M_pnlPRDDL,'L');
			add(txtREMAU = new TxtLimit(200),2,4,1,9,M_pnlPRDDL,'L');
			
			M_pnlPRDDL.setBorder(BorderFactory.createTitledBorder("Production Detail"));
			add(M_pnlPRDDL,8,2,3,19,this,'L');
			
			add(btnPRINT = new JButton("Print"),12,18,1,2,this,'L');
			btnPRINT.setEnabled(true);
			
			String[] L_strTBLHD = {"","Grade","Stock qty","Pending Order Qty","Qty on hold","Sales Return qty","Unclassified qty","Target qty"};
    		int[] L_intCOLSZ = {10,95,100,100,100,100,100,100};
    		tblQTDTL= crtTBLPNL1(this,L_strTBLHD,10,12,2,5,15,L_intCOLSZ,new int[]{0});
    	
    		//txtDOCDT.addKeyListener(this);
			setENBL(false); 
			chkFREZE.setEnabled(false);
		
			M_pnlPRDDL.setVisible(true);
    		setVisible(true);
    	
    		oINPVF=new INPVF();
    		txtDOCNO.setInputVerifier(oINPVF);
    		txtPRTCD.setInputVerifier(oINPVF);
    		txtPRDCD.setInputVerifier(oINPVF);
    		txtPKGTP.setInputVerifier(oINPVF);
    		
    		hstZONCD = new Hashtable<String,String>();
			String L_strSQLQRY= "Select CMT_CODCD,CMT_CODDS from CO_CDTRN where CMT_CGMTP = 'SYS' AND CMT_CGSTP  = 'MR00ZON' AND isnull(CMT_STSFL,'')<>'X'";
			ResultSet L_rstRSSET= cl_dat.exeSQLQRY1(L_strSQLQRY);
			if(L_rstRSSET != null)
			{
				while(L_rstRSSET.next())
					hstZONCD.put(nvlSTRVL(L_rstRSSET.getString("CMT_CODCD"),""),nvlSTRVL(L_rstRSSET.getString("CMT_CODDS"),""));
				L_rstRSSET.close();
			}
			
		}
		catch(Exception L_SQLE)
		{
			setMSG(L_SQLE,"constructor");
		}
	}
	void setENBL_TXT(boolean P_flgSTAT)
	{
		if(P_flgSTAT == false)
		{
			txtDOCNO.setEnabled(true);
			txtDOCDT.setEnabled(false);
			txtDWRNO.setEnabled(false); 
			txtREQBY.setEnabled(false);
			txtPRTCD.setEnabled(false);
			txtZONDS.setEnabled(false);
			txtINDRF.setEnabled(false);
			txtPRDCD.setEnabled(false);
			txtPRDTP.setEnabled(false);
			txtPKGTP.setEnabled(false); 
			txtREQDT.setEnabled(false);
			txtREQQT.setEnabled(false);
			txtREMRQ.setEnabled(false);
		}
		else
		{
			txtDOCDT.setEnabled(true);
			txtDWRNO.setEnabled(true); 
			txtREQBY.setEnabled(true);
			txtPRTCD.setEnabled(true);
			txtZONDS.setEnabled(true);
			txtINDRF.setEnabled(true);
			txtPRDCD.setEnabled(true);
			txtPRDTP.setEnabled(false);
			txtPKGTP.setEnabled(true); 
			txtREQDT.setEnabled(true);
			txtREQQT.setEnabled(true);
			txtREMRQ.setEnabled(true);
		}
	}
	public void actionPerformed(ActionEvent L_AE)
	{
		super.actionPerformed(L_AE);
		try
		{ 
			if(M_objSOURC == cl_dat.M_cmbOPTN_pbst)
			{
				if(cl_dat.M_cmbOPTN_pbst.getSelectedIndex()>0)
				{
					setENBL(true);
					chkFREZE.setEnabled(false);
		    		tblQTDTL.setEnabled(false);
		    		txtPRTNM.setEnabled(false);
		    		txtPRDDS.setEnabled(false);
		    		txtPRDTP.setEnabled(false);
		    		txtZONDS.setEnabled(false);
		    		txtAUTDT.setEnabled(false);
		    		txtAUTBY.setEnabled(false);
					txtDOCDT.requestFocus();
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst))
					{
						//btnPRINT.setEnabled(true);
						if(txtDOCDT.getText().trim().length()==0)
							txtDOCDT.setText(cl_dat.M_strLOGDT_pbst);
					}
					if(!cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst))
					{
						txtDOCNO.setEnabled(true);
						txtDOCNO.requestFocus();
						setMSG(" For Modification first Enter PR No. or Press F1 to Select form List..",'N');
					}
					else
					{
						txtDOCNO.setEnabled(false);
						txtDOCDT.requestFocus();
						setMSG("Enter the PR Date..",'N');					
					}
					if(!cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
					{
						txtPRCDT.setEnabled(false);
						txtAUTDT.setEnabled(false); 
						txtAUTBY.setEnabled(false);
						txtREMAU.setEnabled(false);
						rdbFSBYS.setEnabled(false);
						rdbFSBNO.setEnabled(false);
						btnPRINT.setEnabled(true);
					}
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPDEL_pbst)||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
						btnPRINT.setEnabled(false);
					
					if(!(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst)||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst)))
					{
						clrCOMP();
						setENBL_TXT(false);
					}
				}
				else
					setENBL(false);
				
				
			}
			else if(M_objSOURC == txtDOCNO) 
			{
				if(txtDOCNO.getText().length()==0)
					clrCOMP();
			}
			else if(M_objSOURC ==btnPRINT)
		    {
				pr_rpprq opr_rpprq = new pr_rpprq(txtDOCNO.getText(),txtDOCDT.getText());
				opr_rpprq.exeDSPRP();
				btnPRINT.setEnabled(false);
				if(!cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst) || !cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst))
					btnPRINT.setEnabled(false);
			}
		}
		catch(Exception E_VR)
		{
			setMSG(E_VR,"actionPerformed");		
		}
	}
	
	/** Method to request Focus in all TextField of component,when press ENTER & Display help screen when press F1 **/
	public void keyPressed(KeyEvent L_KE)
	{
		super.keyPressed(L_KE);
		try
		{
			if(L_KE.getKeyCode() == L_KE.VK_F1 )
			{	
				if(M_objSOURC == txtDOCNO)
				{
					M_strHLPFLD = "txtDOCNO";
					cl_dat.M_flgHELPFL_pbst = true;
					setCursor(cl_dat.M_curWTSTS_pbst);
					
					M_strSQLQRY=" SELECT RQ_DOCNO,RQ_DOCDT,CMT_CODDS from PR_RQTRN,CO_CDTRN where isnull(RQ_STSFL,'')<>'XX' ";
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst)
					   ||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPDEL_pbst))
						M_strSQLQRY += " and RQ_STSFL IN('00','01')";
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
						M_strSQLQRY += " and RQ_STSFL IN('00','01')";
					
					//M_strSQLQRY += " AND RQ_PRDTP ='"+M_strSBSCD.substring(2,4)+"'";
					if(txtDOCNO.getText().length() >0)				
						M_strSQLQRY += " AND RQ_DOCNO like '"+txtDOCNO.getText().trim()+"%'";
					M_strSQLQRY += " AND CMT_CGMTP='STS' AND CMT_CGSTP='PRXXREQ' AND CMT_CODCD=RQ_STSFL";
					M_strSQLQRY += " order by RQ_DOCNO";
					//System.out.println("txtDOCNO>>"+M_strSQLQRY);
					cl_hlp(M_strSQLQRY,1,1,new String[]{"PR No","PR Date","Status"},3,"CT");
					setCursor(cl_dat.M_curDFSTS_pbst);
						
				}	
			    else if(M_objSOURC==txtPRTCD)		
				{
					M_strHLPFLD = "txtPRTCD";
					cl_dat.M_flgHELPFL_pbst = true;
					setCursor(cl_dat.M_curWTSTS_pbst);
					M_strSQLQRY=" SELECT PT_PRTCD,PT_PRTNM,PT_ZONCD from CO_PTMST ";
					M_strSQLQRY += "WHERE PT_PRTTP='C' AND PT_PRTCD like '"+txtPRTCD.getText().trim()+"%'";
					M_strSQLQRY += " order by PT_PRTCD";
					//System.out.println("M_strSQLQRY>>"+M_strSQLQRY);
					cl_hlp(M_strSQLQRY,2,1,new String[]{"Customer code","Customer Name","Zone"},3,"CT");
					setCursor(cl_dat.M_curDFSTS_pbst);
    			}
				else if(M_objSOURC == txtPRDCD)
				{
					M_strHLPFLD = "txtPRDCD";
					cl_dat.M_flgHELPFL_pbst = true;
					setCursor(cl_dat.M_curWTSTS_pbst);
					M_strSQLQRY=" SELECT PR_PRDCD,PR_PRDDS,PR_PRDTP from CO_PRMST order by PR_PRDCD";
						//+" PR_PRDTP ='"+M_strSBSCD.substring(2,4)+"'";
					cl_hlp(M_strSQLQRY,2,1,new String[]{"Grade Code","Description","Prd.Type"},3,"CT");
					setCursor(cl_dat.M_curDFSTS_pbst);
					      
				}
				else if(M_objSOURC == txtPKGTP)
				{
					M_strHLPFLD = "txtPKGTP";
					cl_dat.M_flgHELPFL_pbst = true;
					setCursor(cl_dat.M_curWTSTS_pbst);
					M_strSQLQRY=" SELECT CMT_CODCD,CMT_CODDS from CO_CDTRN where"
						+" CMT_CGMTP ='SYS'"
						+" AND CMT_CGSTP = 'FGXXPKG'"
						+" AND isnull(CMT_STSFL,'')<>'X'";	
					cl_hlp(M_strSQLQRY,2,1,new String[]{"Package Code","Description"},2,"CT");
					setCursor(cl_dat.M_curDFSTS_pbst);
					      
				}
			}
			else if(L_KE.getKeyCode() == L_KE.VK_ENTER)
			{
				if(M_objSOURC == txtDOCNO)
				 {
					txtDOCDT.requestFocus();
					setMSG("Enter the Production Request Date..",'N');
					
				 }
				else if(M_objSOURC == txtDOCDT)
				{
						txtDWRNO.requestFocus();
						setMSG("Enter Developement work Request No..",'N');
				}
				else if(M_objSOURC == txtDWRNO)
				{
						txtREQBY.requestFocus();
						setMSG("Enter the Production Request From..",'N');
				}
				else if(M_objSOURC ==txtREQBY)
				{
					txtPRTCD.requestFocus();
					setMSG("Enter the Customer or Press F1 to Select form List..",'N');
				}
				else if(M_objSOURC ==txtPRTCD)
				{
					txtINDRF.requestFocus();
					setMSG("Enter the Indent Reference..",'N');
				}
				else if(M_objSOURC ==txtINDRF)
				{
					txtPRDCD.requestFocus();
					setMSG("Enter the Grade or Press F1 to Select form List..",'N');
				}
				else if(M_objSOURC ==txtPRDCD)
				{
					getQTDTL();
					txtPKGTP.requestFocus();
					setMSG("Enter the Package Type or Press F1 to Select form List..",'N');
				}
				else if(M_objSOURC ==txtPKGTP)
				{
					txtREQQT.requestFocus();
					setMSG("Enter the Quantity..",'N');
				}
				else if(M_objSOURC == txtREQQT)
				{
					txtREQDT.requestFocus();
					setMSG("Enter Request by Date..",'N');
				}
				else if(M_objSOURC == txtREQDT)
				{
					txtREMRQ.requestFocus();
					setMSG("Enter the Remark..",'N');
				}
				else if(M_objSOURC == txtREMRQ)	
				{
					txtREMRQ.setText(txtREMRQ.getText().replace("'","`"));
					cl_dat.M_btnSAVE_pbst.requestFocus();
				}
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
			{
				if(M_objSOURC ==txtDOCNO)
				{
					txtPRCDT.requestFocus();
					setMSG("Enter the Production by Date..",'N');
				}
				else if(M_objSOURC == txtPRCDT)
				{
					txtAUTDT.setText(cl_dat.M_strLOGDT_pbst);
					txtAUTBY.setText(cl_dat.M_strUSRCD_pbst);
					txtREMAU.requestFocus();
					setMSG("Enter the Remark..",'N');
				}
				
				else if(M_objSOURC == txtREMAU)	
				{
					txtREMAU.setText(txtREMAU.getText().replace("'","`"));
					cl_dat.M_btnSAVE_pbst.requestFocus();
				}
			}
		}
		}
		catch(Exception E_VR)
		{
			setMSG(E_VR,"keypressed");		
		}		
	}
	
	void exeHLPOK()
	{
		super.exeHLPOK();
		try
		{
			if(M_strHLPFLD.equals("txtDOCNO"))
			{
				 StringTokenizer L_STRTKN=new StringTokenizer(cl_dat.M_strHELP_pbst,"|");
				 txtDOCNO.setText(L_STRTKN.nextToken());
				 txtDOCDT.setText(L_STRTKN.nextToken());
				  //txtDOCNO.setText(String.valueOf(cl_dat.M_tblHELP_pbst.getValueAt(cl_dat.M_tblHELP_pbst.getSelectedRow(),0)).trim());
			}
			else if(M_strHLPFLD.equals("txtPRTCD"))
			{
				  StringTokenizer L_STRTKN=new StringTokenizer(cl_dat.M_strHELP_pbst,"|");
				  txtPRTCD.setText(L_STRTKN.nextToken());
				  txtPRTNM.setText(L_STRTKN.nextToken());
				  txtZONDS.setText(hstZONCD.get(L_STRTKN.nextToken()));
			}
			else if(M_strHLPFLD.equals("txtPRDCD"))
			{
			      StringTokenizer L_STRTKN=new StringTokenizer(cl_dat.M_strHELP_pbst,"|");
				  txtPRDCD.setText(L_STRTKN.nextToken());
				  txtPRDDS.setText(L_STRTKN.nextToken());
				  txtPRDTP.setText(L_STRTKN.nextToken());
			}
			else if(M_strHLPFLD.equals("txtPKGTP"))
			{
			      StringTokenizer L_STRTKN=new StringTokenizer(cl_dat.M_strHELP_pbst,"|");
				  txtPKGTP.setText(L_STRTKN.nextToken());
				  lblPKGDS.setText(L_STRTKN.nextToken());
		    }
		}
		catch(Exception E_VR)
		{
			setMSG(E_VR,"exeHLPOK()");		
		}
	}	
	boolean vldDATA()
	{
		try
		{
			//Validation for Request Detail.
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst)
			 ||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst))
			{
				if(txtDOCDT.getText().trim().length() ==0)
				{
					txtDOCDT.requestFocus();
					setMSG("Enter Production Request Date",'E');
					return false;
				}
				if(txtREQBY.getText().trim().length() ==0)
				{
					txtREQBY.requestFocus();
					setMSG("Enter Production Request From",'E');
					return false;
				}
				if(txtPRTCD.getText().trim().length() ==0)
				{
					txtPRTCD.requestFocus();
					setMSG("Enter the Customer Name",'E');
					return false;
				}
				if(txtPRDCD.getText().trim().length() ==0)
				{
					txtPRDCD.requestFocus();
					setMSG("Enter the Grade",'E');
					return false;
				}
				if(txtREQQT.getText().trim().length() ==0)
				{
					txtREQQT.requestFocus();
					setMSG("Enter the Quantity",'E');
					return false;
				}
				if(txtREQDT.getText().trim().length() ==0)
				{
					txtREQDT.requestFocus();
					setMSG("Enter the Request by Date",'E');
					return false;
				}
				
				if(txtREMRQ.getText().trim().length() ==0)
				{
					txtREMRQ.requestFocus();
					setMSG("Enter Remark",'E');
					return false;
				}
			}
			//Validation for Production Detail.
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
			if(rdbFSBYS.isSelected())
			{
				if(txtPRCDT.getText().trim().length() ==0)
		    	{
					txtPRCDT.requestFocus();
		    		setMSG("Enter the Product Completion Date",'E');
		    		return false;
		    	}
				if(txtAUTDT.getText().trim().length() ==0)
		    	{
					txtAUTDT.requestFocus();
		    		setMSG("Enter Authorized Date",'E');
		    		return false;
		    	}
				if(txtAUTBY.getText().trim().length() ==0)
		    	{
					txtAUTBY.requestFocus();
		    		setMSG("Enter Authorized by ",'E');
		    		return false;
		    	}
				if(txtREMAU.getText().trim().length() ==0)
		    	{
					txtREMAU.requestFocus();
		    		setMSG("Enter Remark",'E');
		    		return false;
		    	}
			}
		}
		catch(Exception E_VR)
		{
			setMSG(E_VR,"vldDATA()");		
		}
		return true;
	}
	
	/**method to clear component after click on save button &  select option **/
	void clrCOMP()
	{
		try
		{
			txtDOCNO.setText(""); 
			txtDOCDT.setText(""); 
			txtDWRNO.setText("");
			txtREQBY.setText("");
			txtPRTCD.setText("");
			txtPRTNM.setText("");
			txtZONDS.setText("");
			txtINDRF.setText("");
			txtPRDCD.setText("");
			txtPRDTP.setText("");
			txtPRDDS.setText("");
			txtPKGTP.setText("");
			lblPKGDS.setText("");
			txtREQQT.setText("");
			txtREQDT.setText("");
			txtREMRQ.setText("");
			txtPRCDT.setText("");
			txtAUTDT.setText("");
			txtAUTBY.setText("");
			txtREMAU.setText(""); 
			tblQTDTL.clrTABLE();
			rdbFSBYS.setSelected(true);
			rdbFSBNO.setSelected(false);
			chkFREZE.setSelected(false);
		}	
		catch(Exception E)
		{
			setMSG(E,"clrCOMP()");			
		}	
	}

	/**
	 * Method to Save Records*/
	void exeSAVE()
	{
		int P_intROWNO=0;
		String LP_TRNTP="";
		String LP_REMDS="";
		try
		{
			if(!vldDATA()) 
			{
				cl_dat.M_btnSAVE_pbst.setEnabled(true);
				return;
			}
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst))	
		  	{
				exeADDREC(P_intROWNO);
				addRMMST("RQ",txtREMRQ.getText());
			}
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst))	
			{
				exeMODREC();
				addRMMST("RQ",txtREMRQ.getText());
			}
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPDEL_pbst))	
			{
				exeDELREC();
			}
			if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))	
			{
				exeAUTREC();
				addRMMST("AU",txtREMAU.getText());		
			}
			if(cl_dat.exeDBCMT("exeSAVE")) 
			{
				if(!(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPDEL_pbst)||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst)))
				{
					String L_strDOCNO=txtDOCNO.getText();
					String L_strDOCDT=txtDOCDT.getText();
					String L_strPRDDS=txtPRDDS.getText();
					String L_strREQQT=txtREQQT.getText();
					clrCOMP();
					txtDOCNO.setText(L_strDOCNO);
					txtDOCDT.setText(L_strDOCDT);
					txtPRDDS.setText(L_strPRDDS);
					txtREQQT.setText(L_strREQQT);
					
					int intCONFIRM=JOptionPane.showConfirmDialog(this,"Do You Want To Send Mail?","",JOptionPane.YES_NO_OPTION);
					if(intCONFIRM==0)
					{	
						pr_rpprq opr_rpprq = new pr_rpprq(txtDOCNO.getText(),txtDOCDT.getText());
						opr_rpprq.exeDSPRP();
						frdEMAIL();
					}
				}
				else
					clrCOMP();	
				
			}
		}
		catch(Exception L_EX)
	    {
	        setMSG(L_EX,"exeSAVE"); 
	    }
	} 
	/**
	 * Method to Authorized Records
	 * RQ_STSFL='1' to Authorized production detail.
	 */
	private void exeAUTREC()
	{ 
		try
		{
			
			cl_dat.M_flgLCUPD_pbst = true;
			M_strSQLQRY = " Update PR_RQTRN set";
			if(rdbFSBYS.isSelected())
				M_strSQLQRY += " RQ_FSBFL = 'Y',";
			if(rdbFSBNO.isSelected())
				M_strSQLQRY += " RQ_FSBFL = 'N',";
		    if(!txtPRCDT.getText().toString().equals(""))
		    	M_strSQLQRY += " RQ_PRCDT='"+M_fmtDBDAT.format(M_fmtLCDAT.parse(txtPRCDT.getText().toString()))+"',";
		    if(!txtAUTDT.getText().toString().equals(""))
		    	M_strSQLQRY += " RQ_AUTDT='"+M_fmtDBDAT.format(M_fmtLCDAT.parse(txtAUTDT.getText().toString()))+"',";
			
		    M_strSQLQRY +=" RQ_AUTBY= '"+txtAUTBY.getText().toString()+"',";
		    M_strSQLQRY +=" RQ_TRNFL = '0',";	//TRNFL
		    M_strSQLQRY +=" RQ_STSFL = '01',";	//STSFL
		    M_strSQLQRY +=" RQ_LUSBY = '"+ cl_dat.M_strUSRCD_pbst+"',";
		    M_strSQLQRY +=" RQ_LUPDT = '"+ M_fmtDBDAT.format(M_fmtLCDAT.parse(cl_dat.M_strLOGDT_pbst))+"'";
			M_strSQLQRY +=" where RQ_CMPCD='"+cl_dat.M_strCMPCD_pbst+"'";
			M_strSQLQRY +=" AND RQ_DOCNO='"+txtDOCNO.getText().toString()+"'";
			//M_strSQLQRY +=" AND RQ_PRDTP = '"+txtPRDTP.getText().toString()+"'";
			//System.out.println(">>>UPDATE1>>"+ M_strSQLQRY );
			cl_dat.exeSQLUPD(M_strSQLQRY ,"setLCLUPD");
			setCursor(cl_dat.M_curDFSTS_pbst);
		}
		
		catch(Exception L_EX)
		{
			 setMSG(L_EX,"exeAUTREC()"); 
		}
	}
	
	/**
	 *  On Save Button click data is inserted into the PR_RQTRN table
	 *  RQ_STSFL='0' to save data initially.
	 */
	private void exeADDREC(int P_intROWNO)
	{ 
		try
		{
			//this.setCursor(cl_dat.M_curWTSTS_pbst);
			cl_dat.M_flgLCUPD_pbst = true;
			String L_strTEMP1 = "";
			String L_strSBSCD = "";
			int L_intTSTNO =0;
	
			M_strSQLQRY = " Select CMT_CCSVL from CO_CDTRN where CMT_CGMTP ='D"+cl_dat.M_strCMPCD_pbst+"' AND CMT_CGSTP ='PRXXREQ' AND CMT_CODCD='"+cl_dat.M_strFNNYR_pbst.substring(3,4)+cl_dat.M_strCMPCD_pbst+"' AND isnull(CMT_STSFL,'')<>'X'";
			M_rstRSSET = cl_dat.exeSQLQRY1(M_strSQLQRY);
			//System.out.println("INSIDE"+M_strSQLQRY);
			
			if(M_rstRSSET!= null)
			{				
				if(M_rstRSSET.next())				
					L_strTEMP1 = nvlSTRVL(M_rstRSSET.getString("CMT_CCSVL"),""); 		
			 M_rstRSSET.close();
			}						
			L_intTSTNO = Integer.valueOf(L_strTEMP1).intValue()+1;
			strDOCNO = cl_dat.M_strFNNYR_pbst.substring(3,4)+cl_dat.M_strCMPCD_pbst
			+ "00000".substring(0,5 - String.valueOf(L_intTSTNO).length())
			+String.valueOf(L_intTSTNO);	
			txtDOCNO.setText(strDOCNO);	
			
		    M_strSQLQRY =" insert into PR_RQTRN (RQ_DOCNO,RQ_DOCDT,RQ_DWRNO,RQ_REQBY,RQ_PRTCD,RQ_INDRF,RQ_PRDCD,RQ_PKGTP,RQ_REQQT,RQ_REQDT,"
			  	 +" RQ_STKQT,RQ_QLHQT,RQ_RESQT,RQ_UCLQT,RQ_TARQT,RQ_PORQT,RQ_PRDTP,RQ_SBSCD,"
			  	 +" RQ_TRNFL,RQ_STSFL,RQ_LUSBY,RQ_LUPDT,RQ_CMPCD)"
		         +" VALUES('" + strDOCNO +"',";
						
		  if(txtDOCDT.getText().toString().length()>0)
			  M_strSQLQRY += "'"+M_fmtDBDAT.format(M_fmtLCDAT.parse(txtDOCDT.getText()))+"',";
		  else 
			  M_strSQLQRY += "null,"; 
		  
		  M_strSQLQRY += "'"+ txtDWRNO.getText()+"',";
		  M_strSQLQRY += "'"+txtREQBY.getText()+"',";
		  M_strSQLQRY += "'"+txtPRTCD.getText()+"',"; 
		  M_strSQLQRY += "'"+txtINDRF.getText()+"',";
		  M_strSQLQRY += "'"+txtPRDCD.getText()+"',";
		  M_strSQLQRY += "'"+txtPKGTP.getText()+"',";
		  M_strSQLQRY += "'"+txtREQQT.getText()+"',";
		 
		  if(txtREQDT.getText().toString().length()>0)
			  M_strSQLQRY += "'"+M_fmtDBDAT.format(M_fmtLCDAT.parse(txtREQDT.getText().trim()))+"',";
		  else 
			  M_strSQLQRY += "null,"; 
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_STKQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_STKQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_QLHQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_QLHQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_RESQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_RESQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_UCLQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_UCLQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_TARQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_TARQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  if(tblQTDTL.getValueAt(P_intROWNO,TB1_PORQT).toString().length()>0)
			  M_strSQLQRY += tblQTDTL.getValueAt(P_intROWNO,TB1_PORQT).toString()+",";
		  else
			  M_strSQLQRY += "0,";
		  
		  M_strSQLQRY += " '"+ txtPRDTP.getText()+ "',";
		  M_strSQLQRY += " '"+ cl_dat.M_strCMPCD_pbst+"0000"+ "',";
		  
		  M_strSQLQRY += "'0',";
		  M_strSQLQRY += "'00',";
		  M_strSQLQRY += "'"+cl_dat.M_strUSRCD_pbst+"',";
		  M_strSQLQRY += "'"+M_fmtDBDAT.format(M_fmtLCDAT.parse(cl_dat.M_txtCLKDT_pbst.getText()))+"',";
		  M_strSQLQRY += "'"+cl_dat.M_strCMPCD_pbst+"')";
		 // System.out.println(">>>Insert>>"+ M_strSQLQRY );
		  cl_dat.exeSQLUPD(M_strSQLQRY ,"setLCLUPD");
		  
		  if(cl_dat.M_flgLCUPD_pbst == true)
			{
			  JOptionPane.showMessageDialog(this,"Please Note the PR Number\n"+strDOCNO,"",JOptionPane.ERROR_MESSAGE);
				M_strSQLQRY = "Update CO_CDTRN set CMT_CCSVL ='"+ strDOCNO.substring(3) +"' where CMT_CGMTP ='D"+cl_dat.M_strCMPCD_pbst+"' AND CMT_CGSTP ='PRXXREQ' AND CMT_CODCD='"+cl_dat.M_strFNNYR_pbst.substring(3,4)+cl_dat.M_strCMPCD_pbst+"'";
				cl_dat.exeSQLUPD(M_strSQLQRY,"setLCLUPD");
			}
		 
		  setCursor(cl_dat.M_curDFSTS_pbst);
		}
		
		catch(Exception L_EX)
		{
			 setMSG(L_EX,"exeADDREC()"); 
		}
	}
	
	
	/** Method to update Records in PR_RQTRN table.
	 * RQ_STSFL='2' to Freeze data after authorization*/
	 
	private void exeMODREC() 
	{
	    try
	    {
	    	String L_strSTSFL = "0";
	    	// Status flag
			if(chkFREZE.isSelected())
				L_strSTSFL = "02";
			else
				L_strSTSFL = "00";
	    	M_strSQLQRY = " Update PR_RQTRN set";
	    	
	    	M_strSQLQRY += " RQ_DWRNO='"+txtDWRNO.getText().toString()+"',";
	    	M_strSQLQRY += " RQ_REQBY='"+txtREQBY.getText().toString()+"',";
	    	M_strSQLQRY += " RQ_PRTCD='"+txtPRTCD.getText().toString()+"',";
	    	M_strSQLQRY += " RQ_INDRF='"+txtINDRF.getText().toString()+"',";
			M_strSQLQRY += " RQ_PRDCD='"+txtPRDCD.getText().toString()+"',";
			M_strSQLQRY += " RQ_PKGTP='"+txtPKGTP.getText().toString()+"',";
			M_strSQLQRY += " RQ_REQQT='"+txtREQQT.getText().toString()+"',";
			if(!txtREQDT.getText().toString().equals(""))
	    		M_strSQLQRY += " RQ_REQDT='"+M_fmtDBDAT.format(M_fmtLCDAT.parse(txtREQDT.getText().toString()))+"',";
			M_strSQLQRY +=" RQ_TRNFL = '0',";	//TRNFL
			M_strSQLQRY +=" RQ_STSFL = '"+ L_strSTSFL+ "',";	//STSFL
			M_strSQLQRY +=" RQ_LUSBY = '"+ cl_dat.M_strUSRCD_pbst+"',";
			M_strSQLQRY +=" RQ_LUPDT = '"+ M_fmtDBDAT.format(M_fmtLCDAT.parse(cl_dat.M_strLOGDT_pbst))+"'";
			M_strSQLQRY +=" where RQ_CMPCD= '"+cl_dat.M_strCMPCD_pbst+"'";
			M_strSQLQRY +=" AND RQ_DOCNO= '"+txtDOCNO.getText().toString()+"'";
			M_strSQLQRY +=" AND RQ_PRDTP = '"+txtPRDTP.getText()+"' ";
			
			//System.out.println(">>>update>>"+M_strSQLQRY);  
			cl_dat.M_flgLCUPD_pbst = true;
			cl_dat.exeSQLUPD(M_strSQLQRY ,"setLCLUPD");
		 }
	    catch(Exception L_EX)
	    {
	        setMSG(L_EX,"exeMODREC()");
	    }
	}
	/**
	 * Delete Records From PR_RQTRN Table*/
		private void exeDELREC() 
		{ 
		  try
		  {
			  	M_strSQLQRY = "UPDATE PR_RQTRN SET";	
				M_strSQLQRY +="	RQ_STSFL='XX'";	
				M_strSQLQRY +=" where RQ_CMPCD='"+cl_dat.M_strCMPCD_pbst+"'";
				M_strSQLQRY +=" AND RQ_DOCNO='"+txtDOCNO.getText().toString()+"'";
				M_strSQLQRY += " AND RQ_PRDTP = '"+txtPRDTP.getText()+"' ";
				cl_dat.M_flgLCUPD_pbst = true;
				cl_dat.exeSQLUPD(M_strSQLQRY ,"setLCLUPD");
				//System.out.println(">>>Delete>>"+M_strSQLQRY);
		  }
		  catch(Exception L_EX)
		  {
		     setMSG(L_EX,"exeDELREC()");		
		  }
		}
	
	
	/** Method to insert & update remark of Request & Production detail in PR_RMMST table*/
	private void addRMMST(String LP_TRNTP,String LP_REMDS) 
	{
	    try
	    {
	    	ResultSet L_rstRSSET;
	    	
	    	M_strSQLQRY = " select count(*) cnt from pr_rmmst where RM_CMPCD='"+cl_dat.M_strCMPCD_pbst+"'";
	    	M_strSQLQRY +=" and RM_TRNTP ='"+LP_TRNTP+"' and RM_DOCTP ='PR' and RM_DOCNO = '" + txtDOCNO.getText()+"'";
	    	//M_strSQLQRY +=" AND RM_PRDTP = '"+txtPRDTP.getText()+"'";
	    	//System.out.println("001 : "+M_strSQLQRY);
			L_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY);
			if(L_rstRSSET !=null && L_rstRSSET.next())
			{
				if(L_rstRSSET.getInt("cnt")>0)
				{
					cl_dat.M_flgLCUPD_pbst = true;
					M_strSQLQRY ="UPDATE PR_RMMST SET ";
					M_strSQLQRY +=" RM_REMDS='"+LP_REMDS+"'";
			    	/*M_strSQLQRY +=" RM_TRNFL = '0',";	//TRNFL
					//M_strSQLQRY +=" RM_STSFL = '0',";	//STSFL
					M_strSQLQRY +=" RM_LUSBY = '"+ cl_dat.M_strUSRCD_pbst+"',";
					M_strSQLQRY +=" RM_LUPDT = '"+ M_fmtDBDAT.format(M_fmtLCDAT.parse(cl_dat.M_strLOGDT_pbst))+"'";*/
					M_strSQLQRY +=" where RM_CMPCD= '"+cl_dat.M_strCMPCD_pbst+"'";
					M_strSQLQRY +=" AND RM_DOCNO= '"+txtDOCNO.getText().toString()+"'";
					M_strSQLQRY +=" AND RM_PRDTP = '"+txtPRDTP.getText()+"'";
					M_strSQLQRY +=" AND RM_DOCTP = 'PR'";
					M_strSQLQRY +=" AND RM_TRNTP = '"+LP_TRNTP+"'";
					cl_dat.exeSQLUPD(M_strSQLQRY,"setLCLUPD");
               
				}
				else
				{
					cl_dat.M_flgLCUPD_pbst = true;
					M_strSQLQRY=" insert into PR_RMMST(RM_PRDTP,RM_DOCTP,RM_DOCNO,RM_TRNTP,RM_REMDS,RM_LUSBY,RM_SBSCD,RM_CMPCD)";
					M_strSQLQRY += " values (";
					M_strSQLQRY += "'"+txtPRDTP.getText()+"',";
					M_strSQLQRY += "'PR',";
					M_strSQLQRY += " '"+txtDOCNO.getText()+"',";
					M_strSQLQRY += "'"+LP_TRNTP+"',";
					M_strSQLQRY += "'"+LP_REMDS+"',";
					//M_strSQLQRY += "'0',";
					//M_strSQLQRY += "'0',";
					M_strSQLQRY += "'"+cl_dat.M_strUSRCD_pbst+"',";
					//M_strSQLQRY += "'"+M_fmtDBDAT.format(M_fmtLCDAT.parse(cl_dat.M_strLOGDT_pbst))+"',";
					M_strSQLQRY += " '"+ cl_dat.M_strCMPCD_pbst+"0000"+ "',";
					M_strSQLQRY += " '"+cl_dat.M_strCMPCD_pbst+"')";
					//System.out.println(">>>insert >>"+M_strSQLQRY);
	               //cl_dat.M_flgLCUPD_pbst = true;
					cl_dat.exeSQLUPD(M_strSQLQRY ,"setLCLUPD");	
				}
			}
			//System.out.println(">>>addRMMST>>"+M_strSQLQRY);  
		 }
	    catch(Exception L_EX)
	    {
	        setMSG(L_EX,"autRMMST");
	    }
	}
	
		
/**
* Method to setdata in respective text box from pr_rqtrn database table*/
	private void getDATA() 
	{
		try
		{ 
			int L_CNT=0;
			M_strSQLQRY= " SELECT RQ_DOCDT,RQ_DWRNO,RQ_REQBY,RQ_PRTCD,PT_PRTNM,PT_ZONCD,RQ_PRDTP,RQ_PRDCD,PR_PRDDS,RQ_REQRG,RQ_INDRF,RQ_PKGTP,CMT_CODDS,RQ_REQDT,";
			M_strSQLQRY+= " RQ_REQQT,RQ_FSBFL,RQ_STSFL,RQ_PRCDT,RQ_AUTDT,RQ_AUTBY,PT_ZONCD";
			M_strSQLQRY+= " ,RQ_STKQT,RQ_PORQT,RQ_QLHQT,RQ_RESQT,RQ_TARQT,RQ_UCLQT";
			M_strSQLQRY+= " from PR_RQTRN,co_ptmst,co_prmst,co_cdtrn where pt_prtcd=RQ_PRTCD and pt_prttp='C'";
			M_strSQLQRY+= " and PR_PRDCD=RQ_PRDCD and PR_PRDTP=RQ_PRDTP and cmt_cgmtp='SYS' and cmt_cgstp='FGXXPKG' AND isnull(CMT_STSFL,'')<>'X' and CMT_CODCD=RQ_PKGTP and RQ_STSFL<>'XX'  and RQ_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND RQ_DOCNO = '"+txtDOCNO.getText()+"'";
	
			//System.out.println(">>>select>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
			{
				String L_strPRDCD=nvlSTRVL(M_rstRSSET.getString("RQ_PRDCD"),"");
				String L_strZONCD=nvlSTRVL(M_rstRSSET.getString("PT_ZONCD"),"");
				
			   if(!(M_rstRSSET.getDate("RQ_DOCDT")==null))
					txtDOCDT.setText(M_fmtLCDAT.format(M_rstRSSET.getDate("RQ_DOCDT")));
				else
					txtDOCDT.setText("");
			   
				txtDWRNO.setText(nvlSTRVL(M_rstRSSET.getString("RQ_DWRNO"),""));
				txtREQBY.setText(nvlSTRVL(M_rstRSSET.getString("RQ_REQBY"),""));
				txtPRTCD.setText(nvlSTRVL(M_rstRSSET.getString("RQ_PRTCD"),""));
				txtPRTNM.setText(nvlSTRVL(M_rstRSSET.getString("PT_PRTNM"),""));
				
				if(hstZONCD.containsKey(L_strZONCD))
					L_strZONDS = hstZONCD.get(L_strZONCD);
				txtZONDS.setText(L_strZONDS);
				
				txtPRDDS.setText(nvlSTRVL(M_rstRSSET.getString("PR_PRDDS"),""));
				lblPKGDS.setText(nvlSTRVL(M_rstRSSET.getString("CMT_CODDS"),""));
				
				txtINDRF.setText(nvlSTRVL(M_rstRSSET.getString("RQ_INDRF"),""));
				txtPRDCD.setText(nvlSTRVL(M_rstRSSET.getString("RQ_PRDCD"),""));
				txtPRDTP.setText(nvlSTRVL(M_rstRSSET.getString("RQ_PRDTP"),""));
				txtPKGTP.setText(nvlSTRVL(M_rstRSSET.getString("RQ_PKGTP"),""));
				txtREQQT.setText(nvlSTRVL(M_rstRSSET.getString("RQ_REQQT"),""));
				
				if(!(M_rstRSSET.getDate("RQ_REQDT")==null))
					txtREQDT.setText(M_fmtLCDAT.format(M_rstRSSET.getDate("RQ_REQDT")));
				else
					txtREQDT.setText("");
				
				if(nvlSTRVL(M_rstRSSET.getString("RQ_STSFL"),"").equals("01") 
				&& cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst))
					chkFREZE.setEnabled(true);
				else
					chkFREZE.setEnabled(false);
				
				if(nvlSTRVL(M_rstRSSET.getString("RQ_STSFL"),"").equals("02") )
					chkFREZE.setSelected(true);
				else
					chkFREZE.setSelected(false);
				
				/**if FSBFL='Y',Selected YES option button.*/
				if(nvlSTRVL(M_rstRSSET.getString("RQ_FSBFL"),"").equals("Y"))
					rdbFSBYS.setSelected(true);
				else
					rdbFSBYS.setSelected(false);
				
				/**if FSBFL='N',Selected NO option button.*/
				if(nvlSTRVL(M_rstRSSET.getString("RQ_FSBFL"),"").equals("N"))
					rdbFSBNO.setSelected(true);
				else
					rdbFSBNO.setSelected(false);
				
				if(!(M_rstRSSET.getDate("RQ_PRCDT")==null))
					txtPRCDT.setText(M_fmtLCDAT.format(M_rstRSSET.getDate("RQ_PRCDT")));
				else
					txtPRCDT.setText("");
				if(!(M_rstRSSET.getDate("RQ_AUTDT")==null))
					txtAUTDT.setText(M_fmtLCDAT.format(M_rstRSSET.getDate("RQ_AUTDT")));
				else
					txtAUTDT.setText("");
				txtAUTBY.setText(nvlSTRVL(M_rstRSSET.getString("RQ_AUTBY"),""));
				
				
				/**if verify by production,disable all txtbox & enable only freeze chkbox.*/
				if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst)
				&& nvlSTRVL(M_rstRSSET.getString("RQ_STSFL"),"").equals("01"))
				{
					setENBL_TXT(false);	
				}
				
				/**if not verify by production,enable all txtbox & disable freeze chkbox.*/
				else if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst)
				&& nvlSTRVL(M_rstRSSET.getString("RQ_STSFL"),"").equals("00") )
				{
					setENBL_TXT(true);
				}
				
				tblQTDTL.setValueAt(M_rstRSSET.getString("RQ_PRDCD"),0,TB1_PRDCD);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_STKQT"),"0.0"),0,TB1_STKQT);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_PORQT"),"0"),0,TB1_PORQT);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_QLHQT"),"0"),0,TB1_QLHQT);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_RESQT"),"0"),0,TB1_RESQT);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_UCLQT"),"0"),0,TB1_UCLQT);
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("RQ_TARQT"),"0"),0,TB1_TARQT);
				
				String L_strSQLQRY= " select RM_TRNTP,RM_REMDS from PR_RMMST where RM_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' and RM_TRNTP in('RQ','AU') and RM_DOCNO='"+txtDOCNO.getText()+"' and RM_DOCTP ='PR' ";
				//L_strSQLQRY+= "and RM_PRDTP='"+txtPRDTP.getText()+"'";
				ResultSet L_rstRSSET = cl_dat.exeSQLQRY1(L_strSQLQRY); 
				if(L_rstRSSET != null)
				{
					while( L_rstRSSET.next())
					{
						if(L_rstRSSET.getString("RM_TRNTP").equals("RQ"))
						 txtREMRQ.setText(nvlSTRVL(L_rstRSSET.getString("RM_REMDS"),""));
						else if(L_rstRSSET.getString("RM_TRNTP").equals("AU"))
							 txtREMAU.setText(nvlSTRVL(L_rstRSSET.getString("RM_REMDS"),""));
					}
				}
			}
            M_rstRSSET.close();
        }	
		catch(Exception L_EX)
		{
			setMSG(L_EX,"getDATA()"); 
		}
	}
	/**
	* Method to setdata in respective text box from pr_rqtrn database table*/
		private void frdEMAIL() 
		{
			try
			{ 
				/*
				String L_strEMAIL="";
				
				M_strSQLQRY= " SELECT RQ_DOCDT,RQ_DWRNO,RQ_REQBY,RQ_PRTCD,PT_PRTNM,PT_ZONCD,RQ_PRDTP,RQ_PRDCD,PR_PRDDS,RQ_REQRG,RQ_INDRF,RQ_PKGTP,CMT_CODDS,RQ_REQDT,";
				M_strSQLQRY+= " RQ_REQQT,RQ_FSBFL,RQ_STSFL,RQ_PRCDT,RQ_AUTDT,RQ_AUTBY,RQ_STKQT,RQ_QLHQT,RQ_RESQT,RQ_TARQT,RQ_UCLQT,PT_ZONCD from PR_RQTRN,co_ptmst,co_prmst,co_cdtrn where pt_prtcd=RQ_PRTCD and pt_prttp='C'";
				M_strSQLQRY+= " and PR_PRDCD=RQ_PRDCD and PR_PRDTP=RQ_PRDTP and cmt_cgmtp='SYS' and cmt_cgstp='FGXXPKG' AND isnull(CMT_STSFL,'')<>'X' and CMT_CODCD=RQ_PKGTP and RQ_STSFL<>'X'  and RQ_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND RQ_DOCNO = '"+txtDOCNO.getText()+"'";
		
				//System.out.println(">>>select>>"+ M_strSQLQRY );
				M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
				if(M_rstRSSET != null && M_rstRSSET.next())
				{
					String L_strZONCD=nvlSTRVL(M_rstRSSET.getString("PT_ZONCD"),"");
					L_strEMAIL=" Production Request No: "+txtDOCNO.getText()+"   Date: "+M_rstRSSET.getString("RQ_DOCDT");
					
					if(M_rstRSSET.getString("RQ_DWRNO").length()>0)
						L_strEMAIL+="\n"+"  DWR No: "+M_rstRSSET.getString("RQ_DWRNO");
					L_strEMAIL+="\n"+"  PR Initiator: "+M_rstRSSET.getString("RQ_REQBY");
					
					if(hstZONCD.containsKey(L_strZONCD))
						L_strZONDS = hstZONCD.get(L_strZONCD);
					
					L_strEMAIL+="\n"+"  Customer: "+M_rstRSSET.getString("RQ_PRTCD")+" ( "+ M_rstRSSET.getString("PT_PRTNM")+" ) "+"  Zone: "+L_strZONDS;
						
					if(M_rstRSSET.getString("RQ_INDRF").length()>0)
						L_strEMAIL+="\n"+"  Indent Reference: "+M_rstRSSET.getString("RQ_INDRF");
					L_strEMAIL+="\n"+"  Pakage Type: "+M_rstRSSET.getString("RQ_PKGTP")+" ( "+M_rstRSSET.getString("CMT_CODDS")+" )";
					L_strEMAIL+="\n"+"  Quantity:"+M_rstRSSET.getString("RQ_REQQT");
					L_strEMAIL+="\n"+"  Despatch date: "+M_rstRSSET.getString("RQ_REQDT");
					L_strEMAIL+="\n"+"  Grade: "+M_rstRSSET.getString("RQ_PRDCD")+" ( "+M_rstRSSET.getString("PR_PRDDS")+" )"+"  Product Type: "+M_rstRSSET.getString("RQ_PRDTP");
					L_strEMAIL+="\n"+"  Stock Qty: "+M_rstRSSET.getString("RQ_STKQT");
					L_strEMAIL+="\n"+"  Qty on hold: "+M_rstRSSET.getString("RQ_QLHQT");
					L_strEMAIL+="\n"+"  Sales Return Qty: "+M_rstRSSET.getString("RQ_RESQT");
					L_strEMAIL+="\n"+"  Unclassified Qty: "+M_rstRSSET.getString("RQ_UCLQT");
					L_strEMAIL+="\n"+"  Target Qty: "+M_rstRSSET.getString("RQ_TARQT");
					
					String L_strSQLQRY= " select RM_TRNTP,RM_REMDS from PR_RMMST where RM_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' and RM_TRNTP ='RQ' and RM_DOCNO='"+txtDOCNO.getText()+"' and RM_DOCTP ='PR' ";
					//L_strSQLQRY+= "and RM_PRDTP='"+txtPRDTP.getText()+"'";
					ResultSet L_rstRSSET = cl_dat.exeSQLQRY1(L_strSQLQRY); 
					if(L_rstRSSET != null)
					{
						while( L_rstRSSET.next())
						{
							L_strEMAIL+="\n"+"  Remark: "+L_rstRSSET.getString("RM_REMDS");
						}
					}
					
					//JOptionPane.showMessageDialog(this,L_strEMAIL,"",JOptionPane.OK_CANCEL_OPTION);
					cl_eml ocl_eml = new cl_eml();
					ocl_eml.sendfile("ap_thulaseedas@spl.co.in",null,"Production Request",L_strEMAIL);
					ocl_eml.sendfile("kv_mujumdar@spl.co.in",null,"Production Request",L_strEMAIL);
					ocl_eml.sendfile("g_raghavarao@spl.co.in",null,"Production Request",L_strEMAIL);
					ocl_eml.sendfile("prd_sps@spl.co.in",null,"Production Request",L_strEMAIL);
					ocl_eml.sendfile("r_rangarajan@spl.co.in",null,"Production Request",L_strEMAIL);
					ocl_eml.sendfile("systems_works@spl.co.in",null,"Production Request",L_strEMAIL); 
					ocl_eml.sendfile("kb_mathew@spl.co.in",null,"Production Request",L_strEMAIL);
					JOptionPane.showMessageDialog(null,"Mailed To :\n ap_thulaseedas\nkv_mujumdar\ng_raghavarao\nprd_sps\nr_rangarajan\nkb_mathew", "Verify", JOptionPane.INFORMATION_MESSAGE);	
				}
				
	            M_rstRSSET.close();
				*/
					//JOptionPane.showMessageDialog(this,L_strEMAIL,"",JOptionPane.OK_CANCEL_OPTION);
				
				//System.out.println("path>>"+cl_dat.M_strREPSTR_pbst+"pr_rpprq.html");
				cl_eml ocl_eml = new cl_eml();
				String strSUB = "Production Request for "+txtPRDDS.getText()+"  "+txtREQQT.getText()+" MT";
                ocl_eml.sendfile("ap_thulaseedas@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("kv_mujumdar@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				//ocl_eml.sendfile("g_raghavarao@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("a_anantharaman@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("sn_rane@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("prd_sps@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("r_rangarajan@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				//ocl_eml.sendfile("systems_works@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				ocl_eml.sendfile("kb_mathew@spl.co.in",cl_dat.M_strREPSTR_pbst+"pr_rpprq.html",strSUB,"");
				//JOptionPane.showMessageDialog(null,"Production Request for "+txtPRDDS.getText()+"  "+txtREQQT.getText()+" MT", "Verify", JOptionPane.INFORMATION_MESSAGE);	
				//JOptionPane.showMessageDialog(null,"Mailed To :\n ap_thulaseedas\nkv_mujumdar\ng_raghavarao\nprd_sps\nr_rangarajan\nkb_mathew", "Verify", JOptionPane.INFORMATION_MESSAGE);	
				JOptionPane.showMessageDialog(null,"Mailed To :\n ap_thulaseedas\nkv_mujumdar\nsn_rane\na_anantharaman\nprd_sps\nr_rangarajan\nkb_mathew", "Verify", JOptionPane.INFORMATION_MESSAGE);	
			}	
			catch(Exception L_EX)
			{
				setMSG(L_EX,"frdEMAIL()"); 
			}
		}
	/**
	 * Method to set Quantity in tblQTDTL table,when enter Grade in text box*/
	private void getQTDTL() 
	{
		try
		{ 
			int L_CNT=0;
			tblQTDTL.clrTABLE();
			M_strSQLQRY= " select st_prdcd,sum(st_stkqt)st_stkqt from fg_stmst where ST_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND ST_PRDCD = '"+txtPRDCD.getText()+"' AND st_stkqt>0 and st_stsfl='1' group by st_prdcd"; 
			//System.out.println(">>>select1>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
			{
					tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_prdcd"),"0.0"),L_CNT,TB1_PRDCD);
					tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_stkqt"),"0.0"),L_CNT,TB1_STKQT);
			}
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_STKQT);
			
			M_strSQLQRY= " select sum(st_stkqt)st_stkqt from fg_stmst where ST_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND ST_PRDCD = '"+txtPRDCD.getText()+"' AND st_stkqt>0 and st_lotno in (select lt_lotno from pr_ltmst where lt_resfl in ('Q','H')) group by st_prdcd";
			//System.out.println(">>>select>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_stkqt"),"0"),L_CNT,TB1_QLHQT);
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_QLHQT);
			
			M_strSQLQRY= " select sum(st_stkqt) st_stkqt from fg_stmst where ST_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND ST_PRDCD = '"+txtPRDCD.getText()+"' AND st_stkqt>0 and st_stsfl='2' group by st_prdcd"; 
			//System.out.println(">>>select1>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_stkqt"),"0"),L_CNT,TB1_RESQT);
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_RESQT);
			
			M_strSQLQRY= " select sum(st_uclqt)st_uclqt from fg_stmst where ST_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND ST_PRDCD = '"+txtPRDCD.getText()+"' AND st_uclqt>0  group by st_prdcd";
			//System.out.println(">>>select3>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_uclqt"),"0"),L_CNT,TB1_UCLQT);
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_UCLQT);
			
			M_strSQLQRY= "select sum(st_stkqt) st_stkqt from fg_stmst where ST_CMPCD='"+cl_dat.M_strCMPCD_pbst+"' AND ST_PRDCD = '"+txtPRDCD.getText()+"' AND st_stkqt>0  and length(rtrim(ltrim(st_remds)))>0  group by st_prdcd";
			//System.out.println(">>>select4>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_stkqt"),"0"),L_CNT,TB1_TARQT);
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_TARQT);
			
			M_strSQLQRY= "select sum(isnull(int_indqt,0)-(isnull(int_fcmqt,0)+isnull(int_invqt,0))) st_porqt from mr_intrn where int_prdcd = '"+txtPRDCD.getText()+"' and int_stsfl <>'X'";
			//System.out.println(">>>select4>>"+ M_strSQLQRY );
			M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY); 
			if(M_rstRSSET != null && M_rstRSSET.next())
				tblQTDTL.setValueAt(nvlSTRVL(M_rstRSSET.getString("st_porqt"),"0"),L_CNT,TB1_PORQT);
			else
				tblQTDTL.setValueAt("0.0",L_CNT,TB1_PORQT);
			
			M_rstRSSET.close();
        }	
		catch(Exception L_EX)
		{
			setMSG(L_EX,"getQTDTL()"); 
		}
	}
	
	
/**Method to verify PR NO & all Compulsory field**/
	class INPVF extends InputVerifier 
	{
		public boolean verify(JComponent input)
		{
			try
			{
				if(!cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPADD_pbst))	
				if(((JTextField)input).getText().length() == 0)
					return true;
				
				if(input == txtDOCNO)
				{	
					//if(((JTextField)input).getText().length() == 0)
						//return true;
					
					M_strSQLQRY=" SELECT count(*) CNT from PR_RQTRN where isnull(RQ_STSFL,'')<>'XX' ";
				
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPMOD_pbst)
					||cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPDEL_pbst))
							M_strSQLQRY += " and RQ_STSFL IN('00','01')";
					if(cl_dat.M_cmbOPTN_pbst.getSelectedItem().toString().equals(cl_dat.M_OPAUT_pbst))
							M_strSQLQRY += " and RQ_STSFL IN('00','01')";
					
					//M_strSQLQRY += " AND RQ_PRDTP ='"+txtPRDTP.getText()+"'";
					M_strSQLQRY += "and RQ_DOCNO = '"+txtDOCNO.getText()+"'";
					//System.out.println("verify>>"+M_strSQLQRY);
				    M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY);
					if(M_rstRSSET.next() && M_rstRSSET!=null)
					{
						if(M_rstRSSET.getInt("CNT")>0)
						{
							txtDOCNO.setText(txtDOCNO.getText().trim());
							setMSG("",'N');
							getDATA();
						}
						else
						{
							setMSG("Enter Valid Production Request Number",'E');
							return false;
						}
					}
					else
					{
						setMSG("Enter Valid Production Request Number",'E');
						return false;
					}
				}
				
				if(input == txtDOCDT)
			    {
					if(txtDOCDT.getText().trim().length() ==0)
		    		{
						txtDOCDT.requestFocus();
		    			setMSG("Enter the PR Date",'E');
		    			return false;
		    		}
					else if(M_fmtLCDAT.parse(txtDOCDT.getText().trim()).compareTo(M_fmtLCDAT.parse(cl_dat.M_txtCLKDT_pbst.getText()))>0)
					{
						setMSG("PR Date Should Not be greater than Current Date..",'E');
						txtDOCDT.requestFocus();
						return false;
					}
			    }
				
				if(input == txtREQBY)
			    {
					if(txtREQBY.getText().trim().length() ==0)
		    		{
						txtREQBY.requestFocus();
		    			setMSG("Enter the PR Initiator ",'E');
		    			return false;
		    		}
			    }
				if(input == txtPRTCD)
				{
					
					if(txtPRTCD.getText().trim().length() ==0)
		    		{
						txtPRTCD.requestFocus();
		    			setMSG("Enter the Customer",'E');
		    			return false;
		    		}
					M_strSQLQRY=" SELECT PT_PRTCD,PT_PRTNM,pt_zoncd from CO_PTMST ";
					M_strSQLQRY+=" where PT_PRTTP='C' AND PT_PRTCD='"+txtPRTCD.getText().trim()+"'"	;
						M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY);
						//System.out.println("M_strSQLQRY>>"+M_strSQLQRY);
						if(M_rstRSSET.next() && M_rstRSSET!=null)
						{
					        txtPRTCD.setText(M_rstRSSET.getString("PT_PRTCD"));
					        txtZONDS.setText(hstZONCD.get(M_rstRSSET.getString("PT_ZONCD")));
							setMSG("",'N');
						}
						else
						{
							txtPRTCD.requestFocus();
							setMSG("Enter Valid Customer Code",'E');
							return false;
						}
				}
				if(input == txtPRDCD)
				{	
					if(txtPRDCD.getText().trim().length() ==0)
		    		{
						txtPRDCD.requestFocus();
		    			setMSG("Enter the Grade",'E');
		    			return false;
		    		}
					M_strSQLQRY=" SELECT PR_PRDCD,PR_PRDDS,PR_PRDTP from CO_PRMST where"
					+" PR_PRDTP ='"+txtPRDTP.getText()+"' AND PR_PRDCD='"+txtPRDCD.getText()+"'";
				    M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY);
				    //System.out.println("M_strSQLQRY>>"+M_strSQLQRY);
					if(M_rstRSSET.next() && M_rstRSSET!=null)
					{
				        txtPRDCD.setText(M_rstRSSET.getString("PR_PRDCD"));
				        txtPRDTP.setText(M_rstRSSET.getString("PR_PRDTP"));
						setMSG("",'N');
					}
					else
					{
						setMSG("Enter Valid Grade ",'E');
						return false;
					}
				}
				if(input == txtPKGTP)
				{	
					if(txtPKGTP.getText().trim().length() ==0)
		    		{
						txtPKGTP.requestFocus();
		    			setMSG("Enter the Package Type",'E');
		    			return false;
		    		}
					M_strSQLQRY=" SELECT CMT_CODCD,CMT_CODDS from CO_CDTRN where"
						+" CMT_CGMTP ='SYS'"
						+" AND CMT_CGSTP = 'FGXXPKG'"
						//+" AND subStr(CMT_CODCD,1,2)='"+txtPKGTP.getText().trim()+"'";	
						+" AND isnull(CMT_STSFL,'')<>'X'AND CMT_CODCD='"+txtPKGTP.getText().trim()+"'";
				    M_rstRSSET = cl_dat.exeSQLQRY(M_strSQLQRY);
				   // System.out.println("M_strSQLQRY>>"+M_strSQLQRY);
					if(M_rstRSSET.next() && M_rstRSSET!=null)
					{
				        txtPKGTP.setText(M_rstRSSET.getString("CMT_CODCD"));
						setMSG("",'N');
					}
					else
					{
						setMSG("Enter Valid Package Type",'E');
						return false;
					}
				}
				
				if(input == txtREQQT)
			    {
					if(txtREQQT.getText().trim().length() ==0)
		    		{
						txtREQQT.requestFocus();
		    			setMSG("Enter the Quantity ",'E');
		    			return false;
		    		}
			    }
				if(input == txtREQDT)
			    {
					if(txtREQDT.getText().trim().length() ==0)
		    		{
						txtREQDT.requestFocus();
		    			setMSG("Enter the Despatch Date ",'E');
		    			return false;
		    		}
			    }
			}
			catch(Exception E_VR)
			{
				setMSG(E_VR,"class INPVF");		
			}
			return true;
		}
	}
	
}
	
	
	